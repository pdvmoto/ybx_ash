#
# ybconfig.flags, file copied from Franck Pachot, 
#   initially to mimick pg-behaviour.
#   later also to add my own settings
#
# Those settings keeps the PostgreSQL behavior.
# To scale out the active tables, you can move them out of colocation
# but this requires to define the hash or range sharding

# For testing compatibility, we CAN log statements and execution plans 
# and added pg_st_stmn=all, to log sql inside functions
# --ysql_pg_conf_csv=shared_preload_libraries='auto_explain',log_statement='all',log_min_messages='error',auto_explain.log_min_duration=0,auto_explain.log_analyze=on,auto_explain.log_timing=on,auto_explain.log_nested_statements=on,pg_stat_statements.track=all
--ysql_pg_conf_csv=pg_stat_statements.track=all,temp_file_limit=2147483647

# The following parameters gives the best compatibility with PostgreSQL

# colocate, postgres-like (range indexes) without distribution, 
# swichted off in favour is 1-tablet-per-tbl
# --ysql_colocate_database_by_default=true
--ysql_num_tablets=1

# rather not
--callhome=false
--callhome_enabled=false

# dflts: medium, 3600, blank, and http://diagnostics.yugabyte.com 
--callhome_collection_level=low
--callhome_interval_secs=200001
--callhome_tag=
--callhome_url=http://diagnostics.yugabyte.com

# default for PostgreSQL is 1 (one), 
# defult in yb is 100, (one hundred)
# recomend : Higher! 
# --ysql_sequence_cache_minval=1000

# Read Committed with PostgreSQL-like locking (wait on lock)
--yb_enable_read_committed_isolation=true
--enable_deadlock_detection=true
--enable_wait_queues=true

# ignore warning when running ANALYZE
--ysql_beta_features=true

# Batched Nested Loop
# --ysql_yb_bnl_batch_size=1024

# NOTE: Other PostgreSQL GUC may be set in parameters.sql
#       not all are also available as cluster flags

# dflt is 3, modify if required, note: seems only yb-admin can modify this?
# --rf=5
# --replication_factor=5

# experiment with very small threshold, comment out to prevent accidents
# --tablet_split_low_phase_size_threshold_bytes=5242888

# experiment with ash 
# TEST_yb_enable_ash=true

# --allowed_preview_flags_csv=ysql_yb_ash_enable_infra,ysql_yb_enable_ash,enable_pg_cron
--allowed_preview_flags_csv=enable_pg_cron
# --ysql_yb_ash_enable_infra=true
# --ysql_yb_enable_ash=true
--enable_pg_cron=true

# leave dflt, but check Dflts are 16000, 1000 and 500
--ysql_yb_ash_circular_buffer_size=16001
--ysql_yb_ash_sampling_interval_ms=1001
--ysql_yb_ash_sample_size=501

# more test as, dflts are false, false, false
# TEST_ash_debug_aux=true
# TEST_ash_fetch_wait_states_for_raft_log=true
# TEST_ash_fetch_wait_states_for_rocksdb_flush_and_compaction=true

# force write on commit, test impact ?
# --durable_wal_write=true

# experiment with faster tablet-movement, dflts is 900, 900
# note this seems to be minutes, not seconds
--follower_unavailable_considered_failed_sec=181
--log_min_seconds_to_retain=900

# from formpost by franck, some settings to help optimize..
# --enable_pg_parity_tech_preview=true
# --yb_enable_base_scans_cost_model=true
# --yb_enable_optimizer_statistics=true 
# --yb_bnl_batch_size=1024  # to optimize nested loops
# --yb_use_hash_splitting_by_default=false # dont apply has to everything
